"use strict";(self.webpackChunkj_blaszyk_me=self.webpackChunkj_blaszyk_me||[]).push([[892],{2052:function(e,a,t){t.r(a),t.d(a,{default:function(){return M}});var n=t(7387),s=t(8453),l=t(6540);function r(e){const a=Object.assign({ul:"ul",li:"li",a:"a",p:"p",strong:"strong",h2:"h2",span:"span",math:"math",semantics:"semantics",mrow:"mrow",mi:"mi",annotation:"annotation",mo:"mo",mtext:"mtext",msub:"msub",mfrac:"mfrac",mn:"mn",msqrt:"msqrt",svg:"svg",path:"path",msup:"msup",munder:"munder",ol:"ol",hr:"hr",h3:"h3"},(0,s.R)(),e.components),{ImageComponent:t}=a;return t||function(e,a){throw new Error("Expected "+(a?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ImageComponent",!0),l.createElement(l.Fragment,null,l.createElement(a.ul,null,"\n",l.createElement(a.li,null,l.createElement(a.a,{href:"#non-euclidean-domains"},"Non-Euclidean domains")),"\n",l.createElement(a.li,null,l.createElement(a.a,{href:"#spectral-methods"},"Spectral methods")),"\n",l.createElement(a.li,null,l.createElement(a.a,{href:"#spatial-methods"},"Spatial methods")),"\n",l.createElement(a.li,null,l.createElement(a.a,{href:"#why-spatial-is-better-than-spectral"},"Why spatial is better than spectral")),"\n",l.createElement(a.li,null,l.createElement(a.a,{href:"#introduction-by-example-gcn-implemented-in-pytorch-geometric"},"Introduction by example: GCN implemented in PyTorch Geometric")),"\n"),"\n",l.createElement(a.p,null,"I decided to write a series of articles to cover the things I’ve learned while working on my MEng thesis. My work is focused on applying Geometric Deep Learning methods for shape analysis in the medical setting. The first post is an overview of Geometric Deep Learning."),"\n",l.createElement(a.p,null,l.createElement(a.strong,null,"Geometric deep learning (GDL)"),", a term first proposed by Bronstein et al. ",l.createElement(a.a,{href:"#references"},"[1]"),", has emerged aiming to generalize deep learning models to non-Euclidean domains. This novel field in the world of machine learning was successfully used for building recommender systems ",l.createElement(a.a,{href:"#references"},"[2]"),", protein function prediction ",l.createElement(a.a,{href:"#references"},"[3]"),", fake news detection ",l.createElement(a.a,{href:"#references"},"[4]"),", and detection of cancer-beating molecules in food ",l.createElement(a.a,{href:"#references"},"[5]"),". GDL owes its success to the fact that it operates directly on the relational structure of a given problem. An example of such a structure is a graph. It can describe various concepts ranging from a social network to a chemical compound."),"\n",l.createElement(a.p,null,"Most GNN architectures are based on message passing (spatial methods), where at each layer the nodes update\ntheir hidden representations by aggregating information they collect from their neighbours. A crucial difference from traditional neural networks operating on grid-structured data is the absence of canonical ordering of the nodes in a graph. To address this, usually the aggregation function is constructed to be invariant to neighbourhood permutations."),"\n",l.createElement(a.h2,{id:"non-euclidean-domains",style:{position:"relative"}},l.createElement(a.a,{href:"#non-euclidean-domains","aria-label":"non euclidean domains permalink",className:"anchor before"},l.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Non-Euclidean domains"),"\n",l.createElement(a.p,null,l.createElement(a.strong,null,"Graph.")," A graph ",l.createElement(a.span,{className:"katex"},l.createElement(a.span,{className:"katex-mathml"},l.createElement(a.math,{xmlns:"http://www.w3.org/1998/Math/MathML"},l.createElement(a.semantics,null,l.createElement(a.mrow,null,l.createElement(a.mi,null,"G")),l.createElement(a.annotation,{encoding:"application/x-tex"},"G")))),l.createElement(a.span,{className:"katex-html","aria-hidden":"true"},l.createElement(a.span,{className:"base"},l.createElement(a.span,{className:"strut",style:{height:"0.6833em"}}),l.createElement(a.span,{className:"mord mathnormal"},"G"))))," is a pair ",l.createElement(a.span,{className:"katex"},l.createElement(a.span,{className:"katex-mathml"},l.createElement(a.math,{xmlns:"http://www.w3.org/1998/Math/MathML"},l.createElement(a.semantics,null,l.createElement(a.mrow,null,l.createElement(a.mo,{stretchy:"false"},"("),l.createElement(a.mi,null,"V"),l.createElement(a.mo,{separator:"true"},","),l.createElement(a.mi,null,"E"),l.createElement(a.mo,{stretchy:"false"},")")),l.createElement(a.annotation,{encoding:"application/x-tex"},"(V,E)")))),l.createElement(a.span,{className:"katex-html","aria-hidden":"true"},l.createElement(a.span,{className:"base"},l.createElement(a.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),l.createElement(a.span,{className:"mopen"},"("),l.createElement(a.span,{className:"mord mathnormal",style:{marginRight:"0.22222em"}},"V"),l.createElement(a.span,{className:"mpunct"},","),l.createElement(a.span,{className:"mspace",style:{marginRight:"0.1667em"}}),l.createElement(a.span,{className:"mord mathnormal",style:{marginRight:"0.05764em"}},"E"),l.createElement(a.span,{className:"mclose"},")"))))," with the finite set of vertices ",l.createElement(a.span,{className:"katex"},l.createElement(a.span,{className:"katex-mathml"},l.createElement(a.math,{xmlns:"http://www.w3.org/1998/Math/MathML"},l.createElement(a.semantics,null,l.createElement(a.mrow,null,l.createElement(a.mi,null,"V")),l.createElement(a.annotation,{encoding:"application/x-tex"},"V")))),l.createElement(a.span,{className:"katex-html","aria-hidden":"true"},l.createElement(a.span,{className:"base"},l.createElement(a.span,{className:"strut",style:{height:"0.6833em"}}),l.createElement(a.span,{className:"mord mathnormal",style:{marginRight:"0.22222em"}},"V"))))," and edges ",l.createElement(a.span,{className:"katex"},l.createElement(a.span,{className:"katex-mathml"},l.createElement(a.math,{xmlns:"http://www.w3.org/1998/Math/MathML"},l.createElement(a.semantics,null,l.createElement(a.mrow,null,l.createElement(a.mi,null,"E")),l.createElement(a.annotation,{encoding:"application/x-tex"},"E")))),l.createElement(a.span,{className:"katex-html","aria-hidden":"true"},l.createElement(a.span,{className:"base"},l.createElement(a.span,{className:"strut",style:{height:"0.6833em"}}),l.createElement(a.span,{className:"mord mathnormal",style:{marginRight:"0.05764em"}},"E")))),". It captures interactions (edges) between individual units (nodes)."),"\n",l.createElement(a.p,null,l.createElement(a.strong,null,"Manifold.")," A manifold is a is a locally Euclidean space. In computer graphics, shapes are represented as discrete 2-dimensional manifolds. A discrete manifold has vertices uniformly sampled from the surface of the manifold with edges expressing the local structure of the shape. It’s commonly called a triangular mesh."),"\n",l.createElement(a.h2,{id:"spectral-methods",style:{position:"relative"}},l.createElement(a.a,{href:"#spectral-methods","aria-label":"spectral methods permalink",className:"anchor before"},l.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Spectral methods"),"\n",l.createElement(a.p,null,"Spectral methods were the first approach to generalize convolution operation to non-Euclidean domains. In practice, they are rarely used because they are computationally inefficient and don’t generalize well to different domains."),"\n",l.createElement(a.p,null,"Spectral graph convolution draws inspiration from the Euclidean convolution in a spectral domain. The Fourier basis is used to compute spectral convolution in the classical signal processing (Read ",l.createElement(a.a,{href:"https://www-structmed.cimr.cam.ac.uk/Course/Convolution/convolution.html",target:"_blank",rel:"nofollow noopener noreferrer"},"this")," for an in-depth explanation of Convolution theorem). Given a graph, one way to generalize a convolutional architecture is to look at linear operators that commute with the graph Laplacian. This property implies operating on the spectrum of the graph weights, given by the eigenvectors of the graph Laplacian. The concept of graph convolution is explained more in-depth ",l.createElement(a.a,{href:"https://towardsdatascience.com/spectral-graph-convolution-explained-and-implemented-step-by-step-2e495b57f801",target:"_blank",rel:"nofollow noopener noreferrer"},"in here"),"."),"\n",l.createElement(a.h2,{id:"spatial-methods",style:{position:"relative"}},l.createElement(a.a,{href:"#spatial-methods","aria-label":"spatial methods permalink",className:"anchor before"},l.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Spatial methods"),"\n",l.createElement(a.p,null,"Spatial methods are preferred over the spectral methods for ",l.createElement(a.a,{href:"#why-spatial-is-better-than-spectral"},"a number of reasons"),". The spatial convolution is considered a more versatile method for learning on non-Euclidean structures."),"\n",l.createElement(t,{image:e.data.mdx.frontmatter.blogImages[0],alt:"Convolution on an 2D image vs. on a graph"}),"\n",l.createElement(a.p,null,"Figure 1: 2D Convolution vs. Graph Convolution."),"\n",l.createElement(a.p,null,"Spatial methods define graph convolutions based on a node’s spatial relations, which is analogous to the convolution operation on the classical CNN. Images can be considered a special form of a graph with each pixel representing a node, connected to each neighboring pixels. A filter would be applied on the patch of the image including the pixel and its neighboring nodes. Similarly, spatial methods convolve a given node’s features, using a patch operator, with its neighbors’ features. The intuition about the spatial graph convolutions is that this operation propagates and updates node features along edges."),"\n",l.createElement(a.h2,{id:"why-spatial-is-better-than-spectral",style:{position:"relative"}},l.createElement(a.a,{href:"#why-spatial-is-better-than-spectral","aria-label":"why spatial is better than spectral permalink",className:"anchor before"},l.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Why spatial is better than spectral"),"\n",l.createElement(a.p,null,"Spatial models are preferred over spectral models due to efficiency, generality, and flexibility issues. Spectral models are less efficient than spatial models as they need to perform eigendecomposition or handle the whole graph at the same time (e.g. mesh completion scenario). Spatial models are more scalable to large graphs as they directly perform convolutions in the graph domain via information propagation (i.e. message passing). The computation can be performed in a batch of nodes instead of the whole graph. Moreover, spectral models assume a fixed graph and because they rely on a graph Fourier basis they generalize poorly to new graphs. This is because any perturbation to a graph results in a change of eigenbasis. Spatial models perform graph convolutions locally on each node, which allows for weight sharing across different structures and locations. Finally, spectral methods are limited to undirected graphs whereas spatial methods can handle a bigger variety of graphs such as edge inputs, directed graphs, signed graphs and heterogeneous graphs because of the flexibility of the aggregation function"),"\n",l.createElement(a.h2,{id:"introduction-by-example-gcn-implemented-in-pytorch-geometric",style:{position:"relative"}},l.createElement(a.a,{href:"#introduction-by-example-gcn-implemented-in-pytorch-geometric","aria-label":"introduction by example gcn implemented in pytorch geometric permalink",className:"anchor before"},l.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Introduction by example: GCN implemented in PyTorch Geometric"),"\n",l.createElement(a.p,null,l.createElement(a.strong,null,"PyTorch Geometric")," ",l.createElement(a.a,{href:"#references"},"[6]")," is a geometric deep learning extension library for PyTorch. It is a library for deep learning on irregularly structured input data such as graphs, point clouds, and manifolds, also known as geometric deep learning, from a variety of published papers. It consists of an easy-to-use mini-batch loader for many small and single big graphs, multi gpu-support and a large number of common benchmark datasets."),"\n",l.createElement(a.p,null,"PyTorch Geometric makes use of Generic Message Passing Scheme to implement any convolutional operator. The message passing scheme consists of 2 steps:"),"\n",l.createElement(a.ul,null,"\n",l.createElement(a.li,null,"propagate step - messages from nodes are propagated to their local neighborhoods."),"\n",l.createElement(a.li,null,"update step - embedded node’s features are updated by the message vector."),"\n"),"\n",l.createElement(a.p,null,l.createElement(a.strong,null,"Graph Convolutional Network (GCN)")," was defined by Kipf et al. ",l.createElement(a.a,{href:"#references"},"[7]"),". The intuition of this method is that it can alleviate the problem of overfitting on local neighborhood structures for graphs with very wide node degree distributions, such as social networks, citation networks, and many other real-world graph datasets. The computational complexity of this approach is ",l.createElement(a.span,{className:"katex"},l.createElement(a.span,{className:"katex-mathml"},l.createElement(a.math,{xmlns:"http://www.w3.org/1998/Math/MathML"},l.createElement(a.semantics,null,l.createElement(a.mrow,null,l.createElement(a.mi,null,"O"),l.createElement(a.mo,{stretchy:"false"},"("),l.createElement(a.mi,null,"n"),l.createElement(a.mo,{stretchy:"false"},")")),l.createElement(a.annotation,{encoding:"application/x-tex"},"O(n)")))),l.createElement(a.span,{className:"katex-html","aria-hidden":"true"},l.createElement(a.span,{className:"base"},l.createElement(a.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),l.createElement(a.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),l.createElement(a.span,{className:"mopen"},"("),l.createElement(a.span,{className:"mord mathnormal"},"n"),l.createElement(a.span,{className:"mclose"},")")))),". It applies simple filters acting on the 1-hop neighborhood of the graph in the spatial domain. It can be expressed in the generic message-passing scheme as:"),"\n",l.createElement(a.span,{className:"katex-display"},l.createElement(a.span,{className:"katex"},l.createElement(a.span,{className:"katex-mathml"},l.createElement(a.math,{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},l.createElement(a.semantics,null,l.createElement(a.mrow,null,l.createElement(a.mtext,null,"msg"),l.createElement(a.mo,{stretchy:"false"},"("),l.createElement(a.msub,null,l.createElement(a.mi,null,"x"),l.createElement(a.mi,null,"i")),l.createElement(a.mo,{separator:"true"},","),l.createElement(a.msub,null,l.createElement(a.mi,null,"x"),l.createElement(a.mi,null,"j")),l.createElement(a.mo,{stretchy:"false"},")"),l.createElement(a.mo,null,"="),l.createElement(a.mfrac,null,l.createElement(a.mn,null,"1"),l.createElement(a.mrow,null,l.createElement(a.msqrt,null,l.createElement(a.mrow,null,l.createElement(a.mi,null,"deg"),l.createElement(a.mo,null,"⁡"),l.createElement(a.mo,{stretchy:"false"},"("),l.createElement(a.msub,null,l.createElement(a.mi,null,"x"),l.createElement(a.mi,null,"i")),l.createElement(a.mo,{stretchy:"false"},")"))),l.createElement(a.msqrt,null,l.createElement(a.mrow,null,l.createElement(a.mi,null,"d"),l.createElement(a.mi,null,"e"),l.createElement(a.mi,null,"g"),l.createElement(a.mo,{stretchy:"false"},"("),l.createElement(a.msub,null,l.createElement(a.mi,null,"x"),l.createElement(a.mi,null,"j")),l.createElement(a.mo,{stretchy:"false"},")"))))),l.createElement(a.mrow,null,l.createElement(a.mo,{fence:"true"},"("),l.createElement(a.msub,null,l.createElement(a.mi,{mathvariant:"bold"},"x"),l.createElement(a.mi,null,"j")),l.createElement(a.mi,{mathvariant:"bold"},"Θ"),l.createElement(a.mo,{fence:"true"},")"))),l.createElement(a.annotation,{encoding:"application/x-tex"},"\\text{msg}(x_i, x_j) = \\frac{1}{\\sqrt{\\deg(x_i)} \\sqrt{deg(x_j)}} \\left( \\mathbf{x}_j \\mathbf{\\Theta} \\right)")))),l.createElement(a.span,{className:"katex-html","aria-hidden":"true"},l.createElement(a.span,{className:"base"},l.createElement(a.span,{className:"strut",style:{height:"1.0361em",verticalAlign:"-0.2861em"}}),l.createElement(a.span,{className:"mord text"},l.createElement(a.span,{className:"mord"},"msg")),l.createElement(a.span,{className:"mopen"},"("),l.createElement(a.span,{className:"mord"},l.createElement(a.span,{className:"mord mathnormal"},"x"),l.createElement(a.span,{className:"msupsub"},l.createElement(a.span,{className:"vlist-t vlist-t2"},l.createElement(a.span,{className:"vlist-r"},l.createElement(a.span,{className:"vlist",style:{height:"0.3117em"}},l.createElement(a.span,{style:{top:"-2.55em",marginLeft:"0em",marginRight:"0.05em"}},l.createElement(a.span,{className:"pstrut",style:{height:"2.7em"}}),l.createElement(a.span,{className:"sizing reset-size6 size3 mtight"},l.createElement(a.span,{className:"mord mathnormal mtight"},"i")))),l.createElement(a.span,{className:"vlist-s"},"​")),l.createElement(a.span,{className:"vlist-r"},l.createElement(a.span,{className:"vlist",style:{height:"0.15em"}},l.createElement(a.span)))))),l.createElement(a.span,{className:"mpunct"},","),l.createElement(a.span,{className:"mspace",style:{marginRight:"0.1667em"}}),l.createElement(a.span,{className:"mord"},l.createElement(a.span,{className:"mord mathnormal"},"x"),l.createElement(a.span,{className:"msupsub"},l.createElement(a.span,{className:"vlist-t vlist-t2"},l.createElement(a.span,{className:"vlist-r"},l.createElement(a.span,{className:"vlist",style:{height:"0.3117em"}},l.createElement(a.span,{style:{top:"-2.55em",marginLeft:"0em",marginRight:"0.05em"}},l.createElement(a.span,{className:"pstrut",style:{height:"2.7em"}}),l.createElement(a.span,{className:"sizing reset-size6 size3 mtight"},l.createElement(a.span,{className:"mord mathnormal mtight",style:{marginRight:"0.05724em"}},"j")))),l.createElement(a.span,{className:"vlist-s"},"​")),l.createElement(a.span,{className:"vlist-r"},l.createElement(a.span,{className:"vlist",style:{height:"0.2861em"}},l.createElement(a.span)))))),l.createElement(a.span,{className:"mclose"},")"),l.createElement(a.span,{className:"mspace",style:{marginRight:"0.2778em"}}),l.createElement(a.span,{className:"mrel"},"="),l.createElement(a.span,{className:"mspace",style:{marginRight:"0.2778em"}})),l.createElement(a.span,{className:"base"},l.createElement(a.span,{className:"strut",style:{height:"2.4695em",verticalAlign:"-1.1481em"}}),l.createElement(a.span,{className:"mord"},l.createElement(a.span,{className:"mopen nulldelimiter"}),l.createElement(a.span,{className:"mfrac"},l.createElement(a.span,{className:"vlist-t vlist-t2"},l.createElement(a.span,{className:"vlist-r"},l.createElement(a.span,{className:"vlist",style:{height:"1.3214em"}},l.createElement(a.span,{style:{top:"-2.175em"}},l.createElement(a.span,{className:"pstrut",style:{height:"3em"}}),l.createElement(a.span,{className:"mord"},l.createElement(a.span,{className:"mord sqrt"},l.createElement(a.span,{className:"vlist-t vlist-t2"},l.createElement(a.span,{className:"vlist-r"},l.createElement(a.span,{className:"vlist",style:{height:"0.935em"}},l.createElement(a.span,{className:"svg-align",style:{top:"-3.2em"}},l.createElement(a.span,{className:"pstrut",style:{height:"3.2em"}}),l.createElement(a.span,{className:"mord",style:{paddingLeft:"1em"}},l.createElement(a.span,{className:"mop"},"de",l.createElement(a.span,{style:{marginRight:"0.01389em"}},"g")),l.createElement(a.span,{className:"mopen"},"("),l.createElement(a.span,{className:"mord"},l.createElement(a.span,{className:"mord mathnormal"},"x"),l.createElement(a.span,{className:"msupsub"},l.createElement(a.span,{className:"vlist-t vlist-t2"},l.createElement(a.span,{className:"vlist-r"},l.createElement(a.span,{className:"vlist",style:{height:"0.3117em"}},l.createElement(a.span,{style:{top:"-2.55em",marginLeft:"0em",marginRight:"0.05em"}},l.createElement(a.span,{className:"pstrut",style:{height:"2.7em"}}),l.createElement(a.span,{className:"sizing reset-size6 size3 mtight"},l.createElement(a.span,{className:"mord mathnormal mtight"},"i")))),l.createElement(a.span,{className:"vlist-s"},"​")),l.createElement(a.span,{className:"vlist-r"},l.createElement(a.span,{className:"vlist",style:{height:"0.15em"}},l.createElement(a.span)))))),l.createElement(a.span,{className:"mclose"},")"))),l.createElement(a.span,{style:{top:"-2.895em"}},l.createElement(a.span,{className:"pstrut",style:{height:"3.2em"}}),l.createElement(a.span,{className:"hide-tail",style:{minWidth:"1.02em",height:"1.28em"}},l.createElement(a.svg,{xmlns:"http://www.w3.org/2000/svg",width:"400em",height:"1.28em",viewBox:"0 0 400000 1296",preserveAspectRatio:"xMinYMin slice"},l.createElement(a.path,{d:"M263,681c0.7,0,18,39.7,52,119\nc34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120\nc340,-704.7,510.7,-1060.3,512,-1067\nl0 -0\nc4.7,-7.3,11,-11,19,-11\nH40000v40H1012.3\ns-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232\nc-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1\ns-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26\nc-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z\nM1001 80h400000v40h-400000z"}))))),l.createElement(a.span,{className:"vlist-s"},"​")),l.createElement(a.span,{className:"vlist-r"},l.createElement(a.span,{className:"vlist",style:{height:"0.305em"}},l.createElement(a.span))))),l.createElement(a.span,{className:"mord sqrt"},l.createElement(a.span,{className:"vlist-t vlist-t2"},l.createElement(a.span,{className:"vlist-r"},l.createElement(a.span,{className:"vlist",style:{height:"0.9169em"}},l.createElement(a.span,{className:"svg-align",style:{top:"-3.2em"}},l.createElement(a.span,{className:"pstrut",style:{height:"3.2em"}}),l.createElement(a.span,{className:"mord",style:{paddingLeft:"1em"}},l.createElement(a.span,{className:"mord mathnormal"},"d"),l.createElement(a.span,{className:"mord mathnormal"},"e"),l.createElement(a.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"}},"g"),l.createElement(a.span,{className:"mopen"},"("),l.createElement(a.span,{className:"mord"},l.createElement(a.span,{className:"mord mathnormal"},"x"),l.createElement(a.span,{className:"msupsub"},l.createElement(a.span,{className:"vlist-t vlist-t2"},l.createElement(a.span,{className:"vlist-r"},l.createElement(a.span,{className:"vlist",style:{height:"0.3117em"}},l.createElement(a.span,{style:{top:"-2.55em",marginLeft:"0em",marginRight:"0.05em"}},l.createElement(a.span,{className:"pstrut",style:{height:"2.7em"}}),l.createElement(a.span,{className:"sizing reset-size6 size3 mtight"},l.createElement(a.span,{className:"mord mathnormal mtight",style:{marginRight:"0.05724em"}},"j")))),l.createElement(a.span,{className:"vlist-s"},"​")),l.createElement(a.span,{className:"vlist-r"},l.createElement(a.span,{className:"vlist",style:{height:"0.2861em"}},l.createElement(a.span)))))),l.createElement(a.span,{className:"mclose"},")"))),l.createElement(a.span,{style:{top:"-2.8769em"}},l.createElement(a.span,{className:"pstrut",style:{height:"3.2em"}}),l.createElement(a.span,{className:"hide-tail",style:{minWidth:"1.02em",height:"1.28em"}},l.createElement(a.svg,{xmlns:"http://www.w3.org/2000/svg",width:"400em",height:"1.28em",viewBox:"0 0 400000 1296",preserveAspectRatio:"xMinYMin slice"},l.createElement(a.path,{d:"M263,681c0.7,0,18,39.7,52,119\nc34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120\nc340,-704.7,510.7,-1060.3,512,-1067\nl0 -0\nc4.7,-7.3,11,-11,19,-11\nH40000v40H1012.3\ns-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232\nc-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1\ns-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26\nc-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z\nM1001 80h400000v40h-400000z"}))))),l.createElement(a.span,{className:"vlist-s"},"​")),l.createElement(a.span,{className:"vlist-r"},l.createElement(a.span,{className:"vlist",style:{height:"0.3231em"}},l.createElement(a.span))))))),l.createElement(a.span,{style:{top:"-3.23em"}},l.createElement(a.span,{className:"pstrut",style:{height:"3em"}}),l.createElement(a.span,{className:"frac-line",style:{borderBottomWidth:"0.04em"}})),l.createElement(a.span,{style:{top:"-3.677em"}},l.createElement(a.span,{className:"pstrut",style:{height:"3em"}}),l.createElement(a.span,{className:"mord"},l.createElement(a.span,{className:"mord"},"1")))),l.createElement(a.span,{className:"vlist-s"},"​")),l.createElement(a.span,{className:"vlist-r"},l.createElement(a.span,{className:"vlist",style:{height:"1.1481em"}},l.createElement(a.span))))),l.createElement(a.span,{className:"mclose nulldelimiter"})),l.createElement(a.span,{className:"mspace",style:{marginRight:"0.1667em"}}),l.createElement(a.span,{className:"minner"},l.createElement(a.span,{className:"mopen delimcenter",style:{top:"0em"}},"("),l.createElement(a.span,{className:"mord"},l.createElement(a.span,{className:"mord mathbf"},"x"),l.createElement(a.span,{className:"msupsub"},l.createElement(a.span,{className:"vlist-t vlist-t2"},l.createElement(a.span,{className:"vlist-r"},l.createElement(a.span,{className:"vlist",style:{height:"0.3117em"}},l.createElement(a.span,{style:{top:"-2.55em",marginLeft:"0em",marginRight:"0.05em"}},l.createElement(a.span,{className:"pstrut",style:{height:"2.7em"}}),l.createElement(a.span,{className:"sizing reset-size6 size3 mtight"},l.createElement(a.span,{className:"mord mathnormal mtight",style:{marginRight:"0.05724em"}},"j")))),l.createElement(a.span,{className:"vlist-s"},"​")),l.createElement(a.span,{className:"vlist-r"},l.createElement(a.span,{className:"vlist",style:{height:"0.2861em"}},l.createElement(a.span)))))),l.createElement(a.span,{className:"mord mathbf"},"Θ"),l.createElement(a.span,{className:"mclose delimcenter",style:{top:"0em"}},")")))))),"\n",l.createElement(a.span,{className:"katex-display"},l.createElement(a.span,{className:"katex"},l.createElement(a.span,{className:"katex-mathml"},l.createElement(a.math,{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},l.createElement(a.semantics,null,l.createElement(a.mrow,null,l.createElement(a.msub,null,l.createElement(a.msup,null,l.createElement(a.mi,{mathvariant:"bold"},"x"),l.createElement(a.mo,{mathvariant:"bold",lspace:"0em",rspace:"0em"},"′")),l.createElement(a.mi,null,"i")),l.createElement(a.mo,null,"="),l.createElement(a.munder,null,l.createElement(a.mo,null,"∑"),l.createElement(a.mrow,null,l.createElement(a.mi,null,"j"),l.createElement(a.mo,null,"∈"),l.createElement(a.mi,{mathvariant:"script"},"N"),l.createElement(a.mo,{stretchy:"false"},"("),l.createElement(a.mi,null,"i"),l.createElement(a.mo,{stretchy:"false"},")"),l.createElement(a.mo,null,"∪"),l.createElement(a.mo,{stretchy:"false"},"{"),l.createElement(a.mi,null,"i"),l.createElement(a.mo,{stretchy:"false"},"}"))),l.createElement(a.mtext,null,"msg"),l.createElement(a.mo,{stretchy:"false"},"("),l.createElement(a.msub,null,l.createElement(a.mi,null,"x"),l.createElement(a.mi,null,"i")),l.createElement(a.mo,{separator:"true"},","),l.createElement(a.msub,null,l.createElement(a.mi,null,"x"),l.createElement(a.mi,null,"j")),l.createElement(a.mo,{stretchy:"false"},")")),l.createElement(a.annotation,{encoding:"application/x-tex"},"\\mathbf{x'}_i = \\sum_{j \\in \\mathcal{N}(i) \\cup \\{ i \\}} \\text{msg}(x_i, x_j)")))),l.createElement(a.span,{className:"katex-html","aria-hidden":"true"},l.createElement(a.span,{className:"base"},l.createElement(a.span,{className:"strut",style:{height:"0.9519em",verticalAlign:"-0.15em"}}),l.createElement(a.span,{className:"mord"},l.createElement(a.span,{className:"mord"},l.createElement(a.span,{className:"mord mathbf"},"x"),l.createElement(a.span,{className:"msupsub"},l.createElement(a.span,{className:"vlist-t"},l.createElement(a.span,{className:"vlist-r"},l.createElement(a.span,{className:"vlist",style:{height:"0.8019em"}},l.createElement(a.span,{style:{top:"-3.113em",marginRight:"0.05em"}},l.createElement(a.span,{className:"pstrut",style:{height:"2.7em"}}),l.createElement(a.span,{className:"sizing reset-size6 size3 mtight"},l.createElement(a.span,{className:"mord mtight"},l.createElement(a.span,{className:"mord mathbf mtight"},"′"))))))))),l.createElement(a.span,{className:"msupsub"},l.createElement(a.span,{className:"vlist-t vlist-t2"},l.createElement(a.span,{className:"vlist-r"},l.createElement(a.span,{className:"vlist",style:{height:"0.3117em"}},l.createElement(a.span,{style:{top:"-2.55em",marginRight:"0.05em"}},l.createElement(a.span,{className:"pstrut",style:{height:"2.7em"}}),l.createElement(a.span,{className:"sizing reset-size6 size3 mtight"},l.createElement(a.span,{className:"mord mathnormal mtight"},"i")))),l.createElement(a.span,{className:"vlist-s"},"​")),l.createElement(a.span,{className:"vlist-r"},l.createElement(a.span,{className:"vlist",style:{height:"0.15em"}},l.createElement(a.span)))))),l.createElement(a.span,{className:"mspace",style:{marginRight:"0.2778em"}}),l.createElement(a.span,{className:"mrel"},"="),l.createElement(a.span,{className:"mspace",style:{marginRight:"0.2778em"}})),l.createElement(a.span,{className:"base"},l.createElement(a.span,{className:"strut",style:{height:"2.566em",verticalAlign:"-1.516em"}}),l.createElement(a.span,{className:"mop op-limits"},l.createElement(a.span,{className:"vlist-t vlist-t2"},l.createElement(a.span,{className:"vlist-r"},l.createElement(a.span,{className:"vlist",style:{height:"1.05em"}},l.createElement(a.span,{style:{top:"-1.809em",marginLeft:"0em"}},l.createElement(a.span,{className:"pstrut",style:{height:"3.05em"}}),l.createElement(a.span,{className:"sizing reset-size6 size3 mtight"},l.createElement(a.span,{className:"mord mtight"},l.createElement(a.span,{className:"mord mathnormal mtight",style:{marginRight:"0.05724em"}},"j"),l.createElement(a.span,{className:"mrel mtight"},"∈"),l.createElement(a.span,{className:"mord mathcal mtight",style:{marginRight:"0.14736em"}},"N"),l.createElement(a.span,{className:"mopen mtight"},"("),l.createElement(a.span,{className:"mord mathnormal mtight"},"i"),l.createElement(a.span,{className:"mclose mtight"},")"),l.createElement(a.span,{className:"mbin mtight"},"∪"),l.createElement(a.span,{className:"mopen mtight"},"{"),l.createElement(a.span,{className:"mord mathnormal mtight"},"i"),l.createElement(a.span,{className:"mclose mtight"},"}")))),l.createElement(a.span,{style:{top:"-3.05em"}},l.createElement(a.span,{className:"pstrut",style:{height:"3.05em"}}),l.createElement(a.span,null,l.createElement(a.span,{className:"mop op-symbol large-op"},"∑")))),l.createElement(a.span,{className:"vlist-s"},"​")),l.createElement(a.span,{className:"vlist-r"},l.createElement(a.span,{className:"vlist",style:{height:"1.516em"}},l.createElement(a.span))))),l.createElement(a.span,{className:"mspace",style:{marginRight:"0.1667em"}}),l.createElement(a.span,{className:"mord text"},l.createElement(a.span,{className:"mord"},"msg")),l.createElement(a.span,{className:"mopen"},"("),l.createElement(a.span,{className:"mord"},l.createElement(a.span,{className:"mord mathnormal"},"x"),l.createElement(a.span,{className:"msupsub"},l.createElement(a.span,{className:"vlist-t vlist-t2"},l.createElement(a.span,{className:"vlist-r"},l.createElement(a.span,{className:"vlist",style:{height:"0.3117em"}},l.createElement(a.span,{style:{top:"-2.55em",marginLeft:"0em",marginRight:"0.05em"}},l.createElement(a.span,{className:"pstrut",style:{height:"2.7em"}}),l.createElement(a.span,{className:"sizing reset-size6 size3 mtight"},l.createElement(a.span,{className:"mord mathnormal mtight"},"i")))),l.createElement(a.span,{className:"vlist-s"},"​")),l.createElement(a.span,{className:"vlist-r"},l.createElement(a.span,{className:"vlist",style:{height:"0.15em"}},l.createElement(a.span)))))),l.createElement(a.span,{className:"mpunct"},","),l.createElement(a.span,{className:"mspace",style:{marginRight:"0.1667em"}}),l.createElement(a.span,{className:"mord"},l.createElement(a.span,{className:"mord mathnormal"},"x"),l.createElement(a.span,{className:"msupsub"},l.createElement(a.span,{className:"vlist-t vlist-t2"},l.createElement(a.span,{className:"vlist-r"},l.createElement(a.span,{className:"vlist",style:{height:"0.3117em"}},l.createElement(a.span,{style:{top:"-2.55em",marginLeft:"0em",marginRight:"0.05em"}},l.createElement(a.span,{className:"pstrut",style:{height:"2.7em"}}),l.createElement(a.span,{className:"sizing reset-size6 size3 mtight"},l.createElement(a.span,{className:"mord mathnormal mtight",style:{marginRight:"0.05724em"}},"j")))),l.createElement(a.span,{className:"vlist-s"},"​")),l.createElement(a.span,{className:"vlist-r"},l.createElement(a.span,{className:"vlist",style:{height:"0.2861em"}},l.createElement(a.span)))))),l.createElement(a.span,{className:"mclose"},")"))))),"\n",l.createElement(a.p,null,"where neighboring node features are first transformed by a weight matrix ",l.createElement(a.span,{className:"katex"},l.createElement(a.span,{className:"katex-mathml"},l.createElement(a.math,{xmlns:"http://www.w3.org/1998/Math/MathML"},l.createElement(a.semantics,null,l.createElement(a.mrow,null,l.createElement(a.mi,{mathvariant:"bold"},"Θ")),l.createElement(a.annotation,{encoding:"application/x-tex"},"\\mathbf{\\Theta}")))),l.createElement(a.span,{className:"katex-html","aria-hidden":"true"},l.createElement(a.span,{className:"base"},l.createElement(a.span,{className:"strut",style:{height:"0.6861em"}}),l.createElement(a.span,{className:"mord mathbf"},"Θ")))),", normalized by their degree, and finally summed up.\nThis formula can be divided into the following steps:"),"\n",l.createElement(a.ol,null,"\n",l.createElement(a.li,null,"Add self-loops to the adjacency matrix."),"\n",l.createElement(a.li,null,"Linearly transform node feature matrix."),"\n",l.createElement(a.li,null,"Normalize node features."),"\n",l.createElement(a.li,null,"Sum up neighboring node features."),"\n",l.createElement(a.li,null,"Return new node embeddings."),"\n"),"\n",l.createElement(a.p,null,"Pytorch Geometric provides the ",l.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">MessagePassing</code>'}})," class, all we need to do to implement GCN is write our ",l.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">update()</code>'}})," and ",l.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">message()</code>'}})," functions."),"\n",l.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="python"><pre class="language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">GCNConv</span><span class="token punctuation">(</span>MessagePassing<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> in_channels<span class="token punctuation">,</span> out_channels<span class="token punctuation">)</span><span class="token punctuation">:</span>\n        <span class="token builtin">super</span><span class="token punctuation">(</span>GCNConv<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>aggr<span class="token operator">=</span><span class="token string">\'add\'</span><span class="token punctuation">)</span>  <span class="token comment"># "Add" aggregation.</span>\n        self<span class="token punctuation">.</span>lin <span class="token operator">=</span> torch<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span>in_channels<span class="token punctuation">,</span> out_channels<span class="token punctuation">)</span>\n\n    <span class="token keyword">def</span> <span class="token function">forward</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">,</span> edge_index<span class="token punctuation">)</span><span class="token punctuation">:</span>\n        <span class="token comment"># x has shape [N, in_channels]</span>\n        <span class="token comment"># edge_index has shape [2, E]</span>\n\n        <span class="token comment"># Step 1: Add self-loops to the adjacency matrix.</span>\n        edge_index <span class="token operator">=</span> add_self_loops<span class="token punctuation">(</span>edge_index<span class="token punctuation">,</span> num_nodes<span class="token operator">=</span>x<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n        <span class="token comment"># Step 2: Linearly transform node feature matrix.</span>\n        x <span class="token operator">=</span> self<span class="token punctuation">.</span>lin<span class="token punctuation">(</span>x<span class="token punctuation">)</span>\n\n        <span class="token comment"># Step 3-5: Start propagating messages.</span>\n        <span class="token keyword">return</span> self<span class="token punctuation">.</span>propagate<span class="token punctuation">(</span>edge_index<span class="token punctuation">,</span> x<span class="token operator">=</span>x<span class="token punctuation">)</span>\n\n    <span class="token keyword">def</span> <span class="token function">message</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x_j<span class="token punctuation">,</span> edge_index<span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">:</span>\n        <span class="token comment"># x_j has shape [E, out_channels]</span>\n\n        <span class="token comment"># Step 3: Normalize node features.</span>\n        row<span class="token punctuation">,</span> col <span class="token operator">=</span> edge_index\n        deg <span class="token operator">=</span> degree<span class="token punctuation">(</span>row<span class="token punctuation">,</span> size<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>x_j<span class="token punctuation">.</span>dtype<span class="token punctuation">)</span>\n        deg_inv_sqrt <span class="token operator">=</span> deg<span class="token punctuation">.</span><span class="token builtin">pow</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0.5</span><span class="token punctuation">)</span>\n        deg_inv_sqrt<span class="token punctuation">[</span>deg_inv_sqrt <span class="token operator">==</span> <span class="token builtin">float</span><span class="token punctuation">(</span><span class="token string">\'inf\'</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>\n        norm <span class="token operator">=</span> deg_inv_sqrt<span class="token punctuation">[</span>row<span class="token punctuation">]</span> <span class="token operator">*</span> deg_inv_sqrt<span class="token punctuation">[</span>col<span class="token punctuation">]</span>\n        <span class="token keyword">return</span> norm<span class="token punctuation">.</span>view<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> x_j\n\n    <span class="token keyword">def</span> <span class="token function">update</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> aggr_out<span class="token punctuation">)</span><span class="token punctuation">:</span>\n        <span class="token comment"># aggr_out has shape [N, out_channels]</span>\n\n        <span class="token comment"># Step 5: Return new node embeddings.</span>\n        <span class="token keyword">return</span> aggr_out</code></pre></div>'}}),"\n",l.createElement(a.p,null,"Note: Step 4 is done by setting ",l.createElement(a.span,{dangerouslySetInnerHTML:{__html:"<code class=\"language-text\">aggr='add'</code>"}})," when initialising ",l.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">GCNConv</code>'}}),"."),"\n",l.createElement(a.p,null,"Wasn’t too bad, right? PyTorch Geometric offers implementations of most popular convolutional layers and provides lots of examples. ",l.createElement(a.a,{href:"https://github.com/rusty1s/pytorch_geometric",target:"_blank",rel:"nofollow noopener noreferrer"},"Check it out on github"),"."),"\n",l.createElement(a.p,null,"Now we can get our hands dirty with a real-world problem. The Cora dataset consists of 2708 scientific publications classified into one of seven classes. The citation network consists of 5429 links. Each publication in the dataset is described by a 0/1-valued word vector indicating the absence/presence of the corresponding word from the dictionary. We can create a simple model for the semi-supervised classication of each publication in the graph. Our model is constructed as follows:"),"\n",l.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="python"><pre class="language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Net</span><span class="token punctuation">(</span>torch<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>Module<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>\n        <span class="token builtin">super</span><span class="token punctuation">(</span>Net<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>\n        self<span class="token punctuation">.</span>conv1 <span class="token operator">=</span> GCNConv<span class="token punctuation">(</span>dataset<span class="token punctuation">.</span>num_features<span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span>\n        self<span class="token punctuation">.</span>conv2 <span class="token operator">=</span> GCNConv<span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> dataset<span class="token punctuation">.</span>num_classes<span class="token punctuation">)</span>\n\n\n    <span class="token keyword">def</span> <span class="token function">forward</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>\n        x<span class="token punctuation">,</span> edge_index<span class="token punctuation">,</span> edge_weight <span class="token operator">=</span> data<span class="token punctuation">.</span>x<span class="token punctuation">,</span> data<span class="token punctuation">.</span>edge_index<span class="token punctuation">,</span> data<span class="token punctuation">.</span>edge_attr\n        x <span class="token operator">=</span> F<span class="token punctuation">.</span>relu<span class="token punctuation">(</span>self<span class="token punctuation">.</span>conv1<span class="token punctuation">(</span>x<span class="token punctuation">,</span> edge_index<span class="token punctuation">,</span> edge_weight<span class="token punctuation">)</span><span class="token punctuation">)</span>\n        x <span class="token operator">=</span> F<span class="token punctuation">.</span>dropout<span class="token punctuation">(</span>x<span class="token punctuation">,</span> training<span class="token operator">=</span>self<span class="token punctuation">.</span>training<span class="token punctuation">)</span>\n        x <span class="token operator">=</span> self<span class="token punctuation">.</span>conv2<span class="token punctuation">(</span>x<span class="token punctuation">,</span> edge_index<span class="token punctuation">,</span> edge_weight<span class="token punctuation">)</span>\n        <span class="token keyword">return</span> F<span class="token punctuation">.</span>log_softmax<span class="token punctuation">(</span>x<span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",l.createElement(a.p,null,"With just 140 nodes in the training set we are able to achieve >80% classification accuracy for the rest of the nodes, the resulting classified Cora dataset looks as follows:"),"\n",l.createElement(t,{image:e.data.mdx.frontmatter.blogImages[1],alt:"Cora dataset"}),"\n",l.createElement(a.p,null,"Figure 2: Semi-supervised node classification result on Cora dataset."),"\n",l.createElement(a.p,null,"It shows that Geometric Deep Learning is an elegant and performant approach when dealing with non-Euclidean structures."),"\n",l.createElement(a.hr),"\n",l.createElement(a.h3,{id:"references",style:{position:"relative"}},l.createElement(a.a,{href:"#references","aria-label":"references permalink",className:"anchor before"},l.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"References"),"\n",l.createElement(a.ul,null,"\n",l.createElement(a.li,null,"\n",l.createElement(a.p,null,"[1] Bronstein, Michael M., et al. “Geometric deep learning: going beyond euclidean data.” IEEE Signal Processing Magazine 34.4 (2017): 18-42."),"\n"),"\n",l.createElement(a.li,null,"\n",l.createElement(a.p,null,"[2] Monti, Federico, Michael Bronstein, and Xavier Bresson. “Geometric matrix completion with recurrent multi-graph neural networks.” Advances in Neural Information Processing Systems. 2017."),"\n"),"\n",l.createElement(a.li,null,"\n",l.createElement(a.p,null,"[3] Gainza, Pablo, et al. “Deciphering interaction fingerprints from protein molecular surfaces using geometric deep learning.” Nature Methods 17.2 (2020): 184-192."),"\n"),"\n",l.createElement(a.li,null,"\n",l.createElement(a.p,null,"[4] Twitter: ",l.createElement(a.a,{href:"https://twitter.com/fabula_ai",target:"_blank",rel:"nofollow noopener noreferrer"},"fabula_ai")),"\n"),"\n",l.createElement(a.li,null,"\n",l.createElement(a.p,null,"[5] Veselkov, Kirill, et al. “HyperFoods: Machine intelligent mapping of cancer-beating molecules in foods.” Scientific reports 9.1 (2019): 1-12."),"\n"),"\n",l.createElement(a.li,null,"\n",l.createElement(a.p,null,"[6] Kipf, Thomas N., and Max Welling. “Semi-supervised classification with graph convolutional networks.” arXiv preprint arXiv:1609.02907 (2016)."),"\n"),"\n",l.createElement(a.li,null,"\n",l.createElement(a.p,null,"[7] Fey, Matthias, and Jan Eric Lenssen. “Fast graph representation learning with PyTorch Geometric.” arXiv preprint arXiv:1903.02428 (2019)."),"\n"),"\n"))}var c=function(e){void 0===e&&(e={});const{wrapper:a}=Object.assign({},(0,s.R)(),e.components);return a?l.createElement(a,e,l.createElement(r,e)):r(e)};var m=t(4794),o=t(8156),i=t.n(o),p=t(2532),u=t(39),h=t(56),d=t(2907),g=t(9379),E=t(5181),f=t(9787),N=t(4799),k=t(1863),y=t(7821),v=t(5765),b=t(4039),w=t(4310);const x={Link:m.Link,ImageGallery:g.A,ImageComponent:E.A,Container:k.mc,Column:k.VP,MakeItBigContainer:k.r,ThreePhotosContainer:k.Rq,LazyIframe:f.A,StatefulSliderPicker:b.a,StatefulBlockPicker:b.A};let _=function(e){function a(){return e.apply(this,arguments)||this}return(0,n.A)(a,e),a.prototype.render=function(){const{children:e}=this.props,a=this.props.data.mdx,t=i()(this.props,"data.site.siteMetadata.title"),n=i()(this.props,"data.site.siteMetadata.siteUrl");let{previous:r,next:c}=this.props.pageContext;const o=a.frontmatter.ogimage,g=o&&(0,p.d)(o),E=i()(a,"fields.category"),f=n+"/"+E+a.fields.slug,k={"@context":"https://schema.org","@type":"BlogPosting",headline:a.frontmatter.title,datePublished:a.frontmatter.date,url:f,author:[{"@type":"Person",name:"Jedr Blaszyk",url:"https://j.blaszyk.me/"}]};return l.createElement(h.A,{location:this.props.location,title:t,tocComponent:l.createElement(w.A,a.tableOfContents)},l.createElement(d.A,{title:a.frontmatter.title,description:a.frontmatter.spoiler,slug:"/"+a.fields.category+a.fields.slug,image:g,structuredData:k,meta:[{property:"og:type",content:"article"},{property:"og:article:published_time",content:a.frontmatter.date},{property:"og:article:author",content:"https://j.blaszyk.me/about/"}]}),l.createElement("main",null,l.createElement("article",{className:"post"},l.createElement("header",{id:"post-header"},l.createElement("h1",{style:{color:"var(--textTitle)",marginTop:"1.5rem",marginBottom:"0.5rem"}},a.frontmatter.title),l.createElement(m.Link,{style:{boxShadow:"none",textDecoration:"none",color:"var(--textLink)",fontFamily:"Montserrat, sans-serif"},to:"/tech-blog/",rel:"bookmark"},l.createElement("p",null,"Tech Blog")),l.createElement("p",{style:{...(0,v.hs)(-.2),display:"block",marginBottom:(0,v.di)(1),marginTop:(0,v.di)(-.8)}},(0,y.Wy)(a.frontmatter.date),l.createElement("span",{style:{margin:"0 0.15rem"}}," • "),(0,y.Bt)(a.fields.timeToRead.minutes))),l.createElement(s.x,{components:x},e))),l.createElement("aside",null,l.createElement("nav",null,l.createElement("ul",{style:{display:"flex",flexWrap:"wrap",justifyContent:"space-between",listStyle:"none",padding:0,marginLeft:0}},l.createElement("li",null,r&&l.createElement(m.Link,{to:"/"+E+r.fields.slug,rel:"prev"},"← ",r.frontmatter.title)),l.createElement("li",null,c&&l.createElement(m.Link,{to:"/"+E+c.fields.slug,rel:"next"},c.frontmatter.title," →")))),l.createElement("h3",{style:{fontFamily:"Montserrat, sans-serif",marginTop:(0,v.di)(.25)}},l.createElement(m.Link,{style:{boxShadow:"none",textDecoration:"none",color:"var(--textLink)",fontSize:(0,v.di)(.8)},to:"/"},"Jedr's Blog")," • ",l.createElement(m.Link,{style:{boxShadow:"none",textDecoration:"none",color:"var(--textLink)",fontSize:(0,v.di)(.8)},to:"/tech-blog/"},"Tech Blog")),l.createElement("aside",{style:{width:"100%",backgroundColor:"var(--bg-header)",borderRadius:"1em",padding:"1.2em 0.6em",marginBottom:"1.5rem"}},l.createElement(u.A,{style:{marginBottom:0},size:"l"})),l.createElement(N.A,{url:f,id:a.fields.slug,title:a.frontmatter.title})))},a}(l.Component);function M(e){return l.createElement(_,e,l.createElement(c,e))}}}]);
//# sourceMappingURL=component---src-templates-tech-blog-post-js-content-file-path-content-tech-blog-geometric-deep-learning-overview-index-mdx-5f988ea0492197ab4d5e.js.map