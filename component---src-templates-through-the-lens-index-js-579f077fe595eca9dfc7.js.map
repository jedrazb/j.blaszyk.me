{"version":3,"file":"component---src-templates-through-the-lens-index-js-579f077fe595eca9dfc7.js","mappings":"qOAgBsC,IAEhCA,EAA2B,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,KA0F9B,OA1F8BC,EAAAA,EAAAA,GAAAJ,EAAAC,GAAAD,EAAAK,UAC/BC,OAAA,WACE,MAAMC,EAAYC,IAAIC,KAAM,sCACtBC,EAAQF,IAAIC,KAAM,2BAElBE,EAAQ,mBAERC,EAAiB,CACrB,WAAY,qBACZ,QAAS,OACTC,IAAK,yCACLC,KAAMH,GAGR,OACEI,EAAAA,cAACC,EAAAA,EAAM,CAACC,SAAUR,KAAKS,MAAMD,SAAUN,MAAOJ,GAC5CQ,EAAAA,cAACI,EAAAA,EAAG,CACFR,MAAOA,EACPM,SAAUR,KAAKS,MAAMD,SACrBG,YAAa,yDACbR,eAAgBA,IAElBG,EAAAA,cAAA,aACEA,EAAAA,cAAA,MAAIM,MAAO,CAAEC,UAAW,IAAK,qBAE/BP,EAAAA,cAAA,QAAMQ,UAAU,wBACbb,EAAMc,KAAIC,IAAe,IAAd,KAAEC,GAAMD,EAClB,MAAMd,EAAQH,IAAIkB,EAAM,sBAAwBA,EAAKC,OAAOC,KACtDC,EAAgBrB,IAAIkB,EAAM,6BAC1BT,EAAWT,IAAIkB,EAAM,wBACNA,EAAKC,OAAOG,SAAWJ,EAAKC,OAAOC,KACxD,OACEb,EAAAA,cAACgB,EAAAA,KAAI,CACHV,MAAO,CACLW,UAAW,OACXC,eAAgB,OAChBC,MAAO,qBAETC,GAAE,IAAMT,EAAKC,OAAOG,SAAWJ,EAAKC,OAAOC,KAC3CQ,IAAI,YAEJrB,EAAAA,cAAA,WACEsB,IAAKX,EAAKC,OAAOC,KACjBP,MAAO,CACLiB,gBAAiB,sBACjBC,aAAc,OACdC,OAAQ,gCACRC,aAAc,SACdC,SAAU,SACVC,UAAW,kBAGb5B,EAAAA,cAAA,cACEA,EAAAA,cAAA,MACEM,MAAO,CACLa,MAAO,kBACPU,WAAY,yBACZC,UAAUC,EAAAA,EAAAA,IAAO,EAAI,GACrBC,QAAQD,EAAAA,EAAAA,IAAO,EAAI,KAGpBnC,GAEHI,EAAAA,cAAA,OACEM,MAAO,CACL0B,QAAQD,EAAAA,EAAAA,IAAO,EAAI,GACnBL,cAAcK,EAAAA,EAAAA,IAAO,EAAI,GACzBxB,UAAW,IAGbP,EAAAA,cAAA,cACGiC,EAAAA,EAAAA,IAAetB,EAAKuB,YAAYC,MACjCnC,EAAAA,cAAA,QAAMM,MAAO,CAAE0B,OAAQ,cAAc,QACpCI,EAAAA,EAAAA,IAAmBlC,GACpBF,EAAAA,cAAA,QAAMM,MAAO,CAAE0B,OAAQ,cAAc,QACpCK,EAAAA,EAAAA,IAAqB1B,EAAKuB,gBAKhCpB,GACCd,EAAAA,cAACsC,EAAAA,EAAW,CAACC,OAAOC,EAAAA,EAAAA,GAAS1B,GAAgB2B,IAAK7C,KAGjD,KAMnB,EAACX,CAAA,CA1F8B,CAASe,EAAAA,WA6F1C,W","sources":["webpack://j.blaszyk.me/./src/templates/through-the-lens-index.js"],"sourcesContent":["import { Link, graphql } from 'gatsby';\nimport {\n  formatPostDate,\n  formatReadingTime,\n  formatNumberOfPhotos,\n  formatPostLocation,\n} from '../utils/helpers';\n\nimport Bio from '../components/Bio';\nimport Layout from '../components/Layout';\nimport React from 'react';\nimport SEO from '../components/SEO';\nimport get from 'lodash/get';\nimport { rhythm } from '../utils/typography';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\n\nimport './through-the-lens-index.css';\n\nclass ThroughTheLensIndexTemplate extends React.Component {\n  render() {\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title');\n    const posts = get(this, 'props.data.allMdx.edges');\n\n    const title = 'Through the Lens';\n\n    const structuredData = {\n      '@context': 'https://schema.org',\n      '@type': 'Blog',\n      url: 'https://j.blaszyk.me/through-the-lens/',\n      name: title,\n    };\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={title}\n          location={this.props.location}\n          description={'Capturing moments through the camera lens. Photo blog.'}\n          structuredData={structuredData}\n        />\n        <aside>\n          <h1 style={{ marginTop: 0 }}>Through the Lens</h1>\n        </aside>\n        <main className=\"posts-layout-wrapper\">\n          {posts.map(({ node }) => {\n            const title = get(node, 'frontmatter.title') || node.fields.slug;\n            const featuredImage = get(node, 'frontmatter.featuredImage');\n            const location = get(node, 'frontmatter.location');\n            const postLink = `/${node.fields.category}${node.fields.slug}`;\n            return (\n              <Link\n                style={{\n                  boxShadow: 'none',\n                  textDecoration: 'none',\n                  color: 'var(--textNormal)',\n                }}\n                to={`/${node.fields.category}${node.fields.slug}`}\n                rel=\"bookmark\"\n              >\n                <article\n                  key={node.fields.slug}\n                  style={{\n                    backgroundColor: 'var(--bg-secondary)',\n                    borderRadius: '20px',\n                    border: 'solid 1px var(--post-outline)',\n                    marginBottom: '1.5rem',\n                    overflow: 'hidden',\n                    transform: 'translateZ(0)',\n                  }}\n                >\n                  <header>\n                    <h3\n                      style={{\n                        color: 'var(--textLink)',\n                        fontFamily: 'Montserrat, sans-serif',\n                        fontSize: rhythm(5 / 8),\n                        margin: rhythm(1 / 3),\n                      }}\n                    >\n                      {title}\n                    </h3>\n                    <div\n                      style={{\n                        margin: rhythm(1 / 3),\n                        marginBottom: rhythm(1 / 4),\n                        marginTop: 0,\n                      }}\n                    >\n                      <small>\n                        {formatPostDate(node.frontmatter.date)}\n                        <span style={{ margin: '0 0.15rem' }}>{` • `}</span>\n                        {formatPostLocation(location)}\n                        <span style={{ margin: '0 0.15rem' }}>{` • `}</span>\n                        {formatNumberOfPhotos(node.frontmatter)}\n                      </small>\n                    </div>\n                  </header>\n\n                  {featuredImage && (\n                    <GatsbyImage image={getImage(featuredImage)} alt={title} />\n                  )}\n                </article>\n              </Link>\n            );\n          })}\n        </main>\n      </Layout>\n    );\n  }\n}\n\nexport default ThroughTheLensIndexTemplate;\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMdx(\n      sort: { frontmatter: { date: DESC } }\n      filter: { fields: { category: { eq: \"through-the-lens\" } } }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            category\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            location\n            featuredImage {\n              childImageSharp {\n                gatsbyImageData(width: 1000, layout: CONSTRAINED)\n              }\n            }\n            imageRows {\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["ThroughTheLensIndexTemplate","_React$Component","apply","arguments","_inheritsLoose","prototype","render","siteTitle","get","this","posts","title","structuredData","url","name","React","Layout","location","props","SEO","description","style","marginTop","className","map","_ref","node","fields","slug","featuredImage","category","Link","boxShadow","textDecoration","color","to","rel","key","backgroundColor","borderRadius","border","marginBottom","overflow","transform","fontFamily","fontSize","rhythm","margin","formatPostDate","frontmatter","date","formatPostLocation","formatNumberOfPhotos","GatsbyImage","image","getImage","alt"],"sourceRoot":""}