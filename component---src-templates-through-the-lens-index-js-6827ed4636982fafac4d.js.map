{"version":3,"file":"component---src-templates-through-the-lens-index-js-6827ed4636982fafac4d.js","mappings":"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","sources":["webpack://j.blaszyk.me/./src/components/Bio.js","webpack://j.blaszyk.me/./src/templates/through-the-lens-index.js"],"sourcesContent":["import React from 'react';\nimport { rhythm } from '../utils/typography';\nimport { StaticImage } from 'gatsby-plugin-image';\n\nconst Bio = ({ isBike }) => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        marginBottom: rhythm(1),\n      }}\n    >\n      <div\n        style={{\n          marginRight: rhythm(1 / 2),\n          marginBottom: 0,\n          width: rhythm(2),\n          minWidth: rhythm(2),\n          height: rhythm(2),\n          borderRadius: '50%',\n          overflow: 'hidden',\n          transform: 'translateZ(0)',\n        }}\n      >\n        {isBike ? (\n          <StaticImage\n            src={`../assets/profile-pic-bike.jpg`}\n            alt={`Profile pic`}\n            width={90}\n            height={90}\n          />\n        ) : (\n          <StaticImage\n            src={`../assets/profile-pic.jpg`}\n            alt={`Profile pic`}\n            width={90}\n            height={90}\n          />\n        )}\n      </div>\n\n      <p style={{ maxWidth: 380 }}>\n        Blog by{' '}\n        <a href=\"https://mobile.twitter.com/jedr_blaszyk\">Jedr Blaszyk</a>.{' '}\n        Tech, cycling, photography & travelling.\n      </p>\n    </div>\n  );\n};\n\nexport default Bio;\n","import { Link, graphql } from 'gatsby';\nimport {\n  formatPostDate,\n  formatReadingTime,\n  formatNumberOfPhotos,\n  formatPostLocation,\n} from '../utils/helpers';\n\nimport Bio from '../components/Bio';\nimport Layout from '../components/Layout';\nimport React from 'react';\nimport SEO from '../components/SEO';\nimport get from 'lodash/get';\nimport { rhythm } from '../utils/typography';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\n\nimport './through-the-lens-index.css';\n\nclass ThroughTheLensIndexTemplate extends React.Component {\n  render() {\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title');\n    const posts = get(this, 'props.data.allMdx.edges');\n\n    const title = 'Through the Lens';\n\n    const structuredData = {\n      '@context': 'https://schema.org',\n      '@type': 'Blog',\n      url: 'https://j.blaszyk.me/through-the-lens/',\n      name: title,\n    };\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={title}\n          location={this.props.location}\n          description={'Capturing moments through the camera lens. Photo blog.'}\n          structuredData={structuredData}\n        />\n        <aside>\n          <h1 style={{ marginTop: 0 }}>Through the Lens</h1>\n        </aside>\n        <main className=\"posts-layout-wrapper\">\n          {posts.map(({ node }) => {\n            const title = get(node, 'frontmatter.title') || node.fields.slug;\n            const featuredImage = get(node, 'frontmatter.featuredImage');\n            const location = get(node, 'frontmatter.location');\n            const postLink = `/${node.fields.category}${node.fields.slug}`;\n            return (\n              <Link\n                style={{\n                  boxShadow: 'none',\n                  textDecoration: 'none',\n                  color: 'var(--textNormal)',\n                }}\n                to={`/${node.fields.category}${node.fields.slug}`}\n                rel=\"bookmark\"\n              >\n                <article\n                  key={node.fields.slug}\n                  style={{\n                    backgroundColor: 'var(--bg-secondary)',\n                    borderRadius: '20px',\n                    border: 'solid 1px var(--post-outline)',\n                    marginBottom: '1.5rem',\n                    overflow: 'hidden',\n                    transform: 'translateZ(0)',\n                  }}\n                >\n                  <header>\n                    <h3\n                      style={{\n                        color: 'var(--textLink)',\n                        fontFamily: 'Montserrat, sans-serif',\n                        fontSize: rhythm(5 / 8),\n                        margin: rhythm(1 / 3),\n                      }}\n                    >\n                      {title}\n                    </h3>\n                    <div\n                      style={{\n                        margin: rhythm(1 / 3),\n                        marginBottom: rhythm(1 / 4),\n                        marginTop: 0,\n                      }}\n                    >\n                      <small>\n                        {formatPostDate(node.frontmatter.date)}\n                        <span style={{ margin: '0 0.15rem' }}>{` • `}</span>\n                        {formatPostLocation(location)}\n                        <span style={{ margin: '0 0.15rem' }}>{` • `}</span>\n                        {formatNumberOfPhotos(node.frontmatter)}\n                      </small>\n                    </div>\n                  </header>\n\n                  {featuredImage && (\n                    <GatsbyImage image={getImage(featuredImage)} alt={title} />\n                  )}\n                </article>\n              </Link>\n            );\n          })}\n        </main>\n      </Layout>\n    );\n  }\n}\n\nexport default ThroughTheLensIndexTemplate;\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMdx(\n      sort: { frontmatter: { date: DESC } }\n      filter: { fields: { category: { eq: \"through-the-lens\" } } }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            category\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            location\n            featuredImage {\n              childImageSharp {\n                gatsbyImageData(width: 1000, layout: CONSTRAINED)\n              }\n            }\n            imageRows {\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["_ref","isBike","React","style","display","marginBottom","rhythm","marginRight","width","minWidth","height","borderRadius","overflow","transform","StaticImage","src","alt","__imageData","require","maxWidth","href","ThroughTheLensIndexTemplate","_React$Component","apply","arguments","_inheritsLoose","prototype","render","siteTitle","get","this","posts","title","structuredData","url","name","Layout","location","props","SEO","description","marginTop","className","map","node","fields","slug","featuredImage","category","Link","boxShadow","textDecoration","color","to","rel","key","backgroundColor","border","fontFamily","fontSize","margin","formatPostDate","frontmatter","date","formatPostLocation","formatNumberOfPhotos","GatsbyImage","image","getImage"],"sourceRoot":""}