"use strict";(self.webpackChunkj_blaszyk_me=self.webpackChunkj_blaszyk_me||[]).push([[132],{1277:function(e,t,n){n.r(t),n.d(t,{default:function(){return H}});var a=n(7387),o=n(8453),l=n(6540);function s(e){const t=Object.assign({h2:"h2",a:"a",span:"span",p:"p",blockquote:"blockquote",ul:"ul",li:"li",h3:"h3",em:"em",h4:"h4"},(0,o.R)(),e.components),{ImageComponent:n,StatefulSliderPicker:a,StatefulBlockPicker:s}=t;return n||i("ImageComponent",!0),s||i("StatefulBlockPicker",!0),a||i("StatefulSliderPicker",!0),l.createElement(l.Fragment,null,l.createElement(t.h2,{id:"to-blog-or-not",style:{position:"relative"}},l.createElement(t.a,{href:"#to-blog-or-not","aria-label":"to blog or not permalink",className:"anchor before"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"To Blog or Not"),"\n",l.createElement(t.p,null,"We are living in the digital age - publishing content has never been easier thanks to social platform tech giants. After all, they do need to fill up the space on your feed with something, in between showing paid ads."),"\n",l.createElement(t.p,null,"Content type matters. Best holiday pictures from? Instagram. A bit more pictures from a bikepacking trip? Flickr. Career move or a success story? Linkedin. Wanna dive deeper into tech? Medium. Sharing something shorter? Twitter. There seems to be no good solution that ticks all of the boxes to share content you want, on your terms."),"\n",l.createElement(t.p,null,"Search engine optimization (SEO) is another issue. Is the stuff we post to Facebook, Instagram, LinkedIn and Twitter even searchable? Before going on cycling trips I would usually spend quite a bit of time researching places, campsites and routes worth visiting. I don’t remember seeing any content sourced from big tech apps - search engines will usually rank them pretty low in search results. Medium is an exception - if I happen to be lucky enough not to hit the paywall. Blogs are absolute winners in the SEO category. They are indexable by search engines, searchable and readable for us, with tons of valuable content. Blogs are great sources of information whether I’m researching a tech topic or a bikepacking route."),"\n",l.createElement(t.p,null,"It’s because of my bikepacking trips, that I decided to start a blog. I wanted to tell this story, on my terms, without restrictions on how the content is organized and presented. I wanted my experience and well-researched routes to be discoverable by anyone interested - in order to give back, hopefully, an inspiration, to the community. It’s also a great way to reflect on your experience after doing something interesting."),"\n",l.createElement(t.p,null,"And it worked! Take for example ",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">"norway bikepacking"</code>'}})," search query in Google, you should find the story usually in the top 10 results."),"\n",l.createElement(t.blockquote,null,"\n",l.createElement(t.p,null,l.createElement(t.a,{href:"/norway-bikepacking-trondheim-to-bergen/"},"Norway Bikepacking: Trondheim to Bergen")),"\n"),"\n",l.createElement(t.p,null,"The content is very important for being ranked highly. But as a techie, I did my research to make sure all non-content related metrics will boost my blog in page rank algorithm: performance, SEO practices and mobile usability. I will go over the tech stack of my blog, and some design decisions which made this performant, customizable and completely free - the only recurring cost is a few dollars for the domain name - and it enabled such results from ",l.createElement(t.a,{href:"https://pagespeed.web.dev/",target:"_blank",rel:"nofollow noopener noreferrer"},"pagespeed.web.dev")," - a Google tool to measure overall website performance."),"\n",l.createElement(n,{image:e.data.mdx.frontmatter.blogImages[0],alt:"Blog performance metrics"}),"\n",l.createElement(t.h2,{id:"blogging-solutions-market",style:{position:"relative"}},l.createElement(t.a,{href:"#blogging-solutions-market","aria-label":"blogging solutions market permalink",className:"anchor before"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Blogging solutions market"),"\n",l.createElement(t.p,null,"There are tons of options on the market - try searching for ",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">"blog"</code>'}}),". The choice is hard, especially for someone without much technical experience. Questions I asked myself when researching this topic were:"),"\n",l.createElement(t.ul,null,"\n",l.createElement(t.li,null,"Can I host the blog myself? - I didn’t want to lock myself with a single hosting provider."),"\n",l.createElement(t.li,null,"Will ads be displayed on my blog? - Some blogging providers (e.g. wordpress.com) show ads on your blog by default when on a “free plan”."),"\n",l.createElement(t.li,null,"How much will it cost? - All the costs related to hosting, themes and customization."),"\n",l.createElement(t.li,null,"How easy is it to customize? - Can I easily use code to customize the blog?"),"\n"),"\n",l.createElement(t.p,null,"I wanted to choose my own hosting provider, customize my blog without having to buy “magical” plugins and eliminate all ads (without having to be on a paid plan). It also had to be fast - the UX was very important to me."),"\n",l.createElement(t.h2,{id:"this-blogs-tech-stack",style:{position:"relative"}},l.createElement(t.a,{href:"#this-blogs-tech-stack","aria-label":"this blogs tech stack permalink",className:"anchor before"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"This Blog’s Tech Stack"),"\n",l.createElement(t.p,null,"I decided to use GatsbyJS which is an open-source static site generator built on top of Node.js using React and GraphQL. You are able to define your blogging templates in React, while your content is written in MDX - Markdown supporting JSX (React) components, which allows you to add interactive React components directly into your copy written in Markdown, like that one:"),"\n",l.createElement(a),"\n",l.createElement("br"),"\n",l.createElement(t.p,null,"Check this post’s ",l.createElement(t.a,{href:"https://github.com/jedrazb/personal-blog/blob/master/content/tech-blog/tech-stack-of-fast-free-and-customizable-blog/index.mdx?plain=1#L44",target:"_blank",rel:"nofollow noopener noreferrer"},"source")," to verify that it’s just a React ",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">&lt;SliderPicker /></code>'}})," defined in MDX file."),"\n",l.createElement(t.p,null,"The static webpage is hosted completely for free thanks to GitHub Pages. To speed up the website load times, I use Cloudflare (amazing) free plan which offers a content delivery network (CDN) along with caching. This setup, along with built-in Gatsby’s optimizations such as image lazy-loading, is sufficient to score near-perfect scores for website performance on popular benchmarks."),"\n",l.createElement(t.p,null,"Let’s go over the building blocks."),"\n",l.createElement(t.h3,{id:"gatsbyjs-graphql-mdx",style:{position:"relative"}},l.createElement(t.a,{href:"#gatsbyjs-graphql-mdx","aria-label":"gatsbyjs graphql mdx permalink",className:"anchor before"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"GatsbyJS, GraphQL, MDX"),"\n",l.createElement(t.p,null,"Gatsby.js is a static site generator that uses React.js (for the client-side) and GraphQL (to access data) to build reliable, fast, static websites. You can use React to define pages or templates (like blog post pages) that query for data using GQL. The GQL queries can fetch your data from CMS (like Contentful) or your local filesystem - e.g. blog posts organized in folders. It might sound a bit complex but if you are familiar with React and GQL, the learning curve is not steep at all. The ",l.createElement(t.a,{href:"https://www.gatsbyjs.com/docs/",target:"_blank",rel:"nofollow noopener noreferrer"},"documentation")," is great and there are lots of starter templates (check ",l.createElement(t.a,{href:"https://www.gatsbyjs.com/starters/",target:"_blank",rel:"nofollow noopener noreferrer"},"Gatsby Starter Libary"),"). It allows you to start with having a fully functional Gatsby blog so that you can focus on writing content and customizations."),"\n",l.createElement(t.p,null,"The rough structure of your GatsbyJS blog will look like that:"),"\n",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">├── content\n│   └── blog-post-1\n│       └── index.mdx\n├── src\n│   ├── blog-post-template.js\n│   ├── blog-index.js\n│   └── ... other React components / files\n├── ...\n├── gatsby-config.js\n└── gatsby-node.js\n</code></pre></div>'}}),"\n",l.createElement(t.p,null,"You organize your blog posts as folders inside ",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">/content</code>'}}),". The folder name can map to your post’s slug so that on path ",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">/blog-post-1</code>'}})," you would serve content sourced from Markdown (MDX) file ",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">content/blog-post-1/index.mdx</code>'}}),". The content will be displayed inside a template you defined in React - in our case ",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">blog-post-template.js</code>'}})," and your blog index (main) page will be defined in ",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">blog-index.js</code>'}}),". In ",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">gatsby-config.js</code>'}})," you would need to use a few open-source (and free plugins!), like ",l.createElement(t.a,{href:"https://www.gatsbyjs.com/plugins/gatsby-source-filesystem/",target:"_blank",rel:"nofollow noopener noreferrer"},"gatsby-source-filesystem"),", to use GQL queries to fetch blog post content from your local filesystem. The GQL for e.g. blog post is defined directly in your js template file and looks roughly like this:"),"\n",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="graphql"><pre class="language-graphql"><code class="language-graphql"><span class="token keyword">query</span> <span class="token definition-query function">BlogPostBySlug</span><span class="token punctuation">(</span><span class="token variable">$slug</span><span class="token punctuation">:</span> <span class="token scalar">String</span><span class="token operator">!</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token property-query">mdx</span><span class="token punctuation">(</span><span class="token attr-name">fields</span><span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token attr-name">slug</span><span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token attr-name">eq</span><span class="token punctuation">:</span> <span class="token variable">$slug</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token property">id</span>\n    <span class="token property">body</span>\n    <span class="token property">timeToRead</span>\n    <span class="token operator">...</span> <span class="token comment"># more fields, e.g. images</span>\n    <span class="token object">fields</span> <span class="token punctuation">{</span>\n      <span class="token property">slug</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div>'}}),"\n",l.createElement(t.p,null,"Your blog content written in Markdown can be easily rendered inside React post templates. But using Markdown can be quite limiting as it is pretty basic when it comes to layout and customizations. MDX comes to the rescue! It allows you to add JSX (React) components directly into your posts written in Markdown, just like that:"),"\n",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">import { BlockPicker } from "react-color"\n\n_Hello, world!_\n\nHere\'s a color picker!\n\n&lt;BlockPicker /></code></pre></div>'}}),"\n",l.createElement(t.p,null,l.createElement(t.em,null,"Hello, world!")),"\n",l.createElement(t.p,null,"Here’s a color picker!"),"\n",l.createElement(s),"\n",l.createElement("br"),"\n",l.createElement(t.p,null,"When using Gatsby performance is baked in as it automates code splitting, image optimization, inlining critical styles, lazy-loading, prefetching resources, and more to ensure your blog is fast — from my experience, no manual tuning is required to ace the benchmarks."),"\n",l.createElement(t.p,null,"As you can see Gatsby, GQL and MDX are powerful tools to build customizable, interactive and performant static blogs."),"\n",l.createElement(t.h3,{id:"github-pages",style:{position:"relative"}},l.createElement(t.a,{href:"#github-pages","aria-label":"github pages permalink",className:"anchor before"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Github Pages"),"\n",l.createElement(t.p,null,"Github Pages allows you to host static websites directly on Github. It’s free for public repos. All you need to do is to generate your static website and push the code into a branch, ",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">gh-pages</code>'}})," npm package will help you with automating this process. Once the generated site is pushed to the branch, Github Actions will take it from there and deploy the static website under your domain name."),"\n",l.createElement(t.h3,{id:"cloudflare-cdn",style:{position:"relative"}},l.createElement(t.a,{href:"#cloudflare-cdn","aria-label":"cloudflare cdn permalink",className:"anchor before"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Cloudflare CDN"),"\n",l.createElement(t.p,null,"CloudFlare is an awesome reverse cache proxy and CDN that provides DNS and HTTPS. Once you add your static site make sure to enable Cloudflare to cache it - and effectively serve it from CDN Edge Cache - this should visibly speed up the load times. Whenever you make a change to your site you would need to remember to manually purge the cache in Cloudflare (it probably can be automated using Github Actions)."),"\n",l.createElement(t.h3,{id:"developing-and-deploying-the-blog",style:{position:"relative"}},l.createElement(t.a,{href:"#developing-and-deploying-the-blog","aria-label":"developing and deploying the blog permalink",className:"anchor before"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Developing and Deploying the Blog"),"\n",l.createElement(t.h4,{id:"running-locally",style:{position:"relative"}},l.createElement(t.a,{href:"#running-locally","aria-label":"running locally permalink",className:"anchor before"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Running locally"),"\n",l.createElement(t.p,null,"For local dev Gatsby offers a hot-reloading development environment, just run ",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">gatsby develop</code>'}}),". Once I’m happy with my changes I would usually run the production build and serve it locally to double-check that everything is generated correctly, you can do it via:"),"\n",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">gatsby build &amp;&amp; gatsby serve</code></pre></div>'}}),"\n",l.createElement(t.p,null,"I found that sometimes the develop server is not 100% consistent with production builds when it comes to CSS styling - all issues were related to Chrome, Safari, etc. default styles being overwritten by develop server, but for prod build the default styles were taking precedence (e.g. extra margin under ",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">&lt;p></code>'}})," tags). Though I didn’t have that issue for a long time, perhaps upgrading Gatsby fixed it."),"\n",l.createElement(t.h4,{id:"deploying-changes",style:{position:"relative"}},l.createElement(t.a,{href:"#deploying-changes","aria-label":"deploying changes permalink",className:"anchor before"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Deploying changes"),"\n",l.createElement(t.p,null,"Once I’m happy with the results, I do the following:"),"\n",l.createElement(t.ul,null,"\n",l.createElement(t.li,null,"Run ",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">yarn deploy</code>'}})," what maps to ",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">yarn build &amp;&amp; gh-pages -d public</code>'}}),", the generated static website from the ",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">build</code>'}})," folder will be pushed to github branch."),"\n",l.createElement(t.li,null,"Github Actions will start a deployment process, it can take a while until the process finishes. After that’s done I go to Cloudflare to purge the cache. That’s all!"),"\n",l.createElement(t.li,null,"You can optionally go to Google Search Console (SEO tool) and tell it directly to index your newly created blog post - so that it can appear in search results ASAP."),"\n"),"\n",l.createElement(t.h3,{id:"limitations",style:{position:"relative"}},l.createElement(t.a,{href:"#limitations","aria-label":"limitations permalink",className:"anchor before"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Limitations"),"\n",l.createElement(t.ul,null,"\n",l.createElement(t.li,null,"The blog is ",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">static</code>'}})," - it means it’s fast but also it means there is no server able to serve dynamic content. User accounts, reactions, comments - they are not natively supported by Gatsby - but there are ways for ",l.createElement(t.a,{href:"https://www.gatsbyjs.com/docs/how-to/rendering-options/using-server-side-rendering/",target:"_blank",rel:"nofollow noopener noreferrer"},"SSR with Gatsby"),". Also, there are many (freemium and paid) solutions on the market which at least allow you to embed reactions and comments."),"\n",l.createElement(t.li,null,"I store images directly in the repo, they are also included in the static build. This will work until I don’t hit GitHub repo size limit (afaik it’s 100GB). I optimize, and downsize all the images so for now it works fine. But if you are planning on storing a lot of images you can use any image CMS/CDN provider and integrate it with Gatsby directly - read more about it ",l.createElement(t.a,{href:"https://www.gatsbyjs.com/docs/how-to/images-and-media/using-gatsby-plugin-image/#using-images-from-a-cms-or-cdn",target:"_blank",rel:"nofollow noopener noreferrer"},"here"),"."),"\n",l.createElement(t.li,null,"The developer is in the driver’s seat, meaning I can customize the blog as I wish but I’m also responsible for all housekeeping stuff e.g. adding ",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">SEO</code>'}})," meta tags for search engines. Gatsby won’t complain if you forget add ",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">title</code>'}})," and ",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">description</code>'}})," tags (very important for SEO) - so in that respect, I find WordPress much easier and safer to use - it by nature works well with search engines by asking you to provide important meta tags."),"\n"),"\n",l.createElement(t.p,null,"Hope you enjoyed this article. This blog is ",l.createElement(t.a,{href:"https://github.com/jedrazb/personal-blog",target:"_blank",rel:"nofollow noopener noreferrer"},"open-source"),", feel free to check out, fork or star the repo."))}var r=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,o.R)(),e.components);return t?l.createElement(t,e,l.createElement(s,e)):s(e)};function i(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}var c=n(4794),h=n(8156),d=n.n(h),u=n(2532),p=n(39),m=n(9203),g=n(2907),y=n(9379),f=n(5181),b=n(3303),w=n(4799),k=n(1863),v=n(7821),E=n(5765),S=n(4039),x=n(1929);const I={Link:c.Link,ImageGallery:y.A,ImageComponent:f.A,Container:k.mc,Column:k.VP,MakeItBigContainer:k.r,ThreePhotosContainer:k.Rq,LazyIframe:b.A,StatefulSliderPicker:S.a,StatefulBlockPicker:S.A};let _=function(e){function t(){return e.apply(this,arguments)||this}return(0,a.A)(t,e),t.prototype.render=function(){const{children:e}=this.props,t=this.props.data.mdx,n=d()(this.props,"data.site.siteMetadata.title"),a=d()(this.props,"data.site.siteMetadata.siteUrl");let{previous:s,next:r}=this.props.pageContext;const i=t.frontmatter.ogimage,h=i&&(0,u.d)(i),y=d()(t,"fields.category"),f=a+"/"+y+t.fields.slug,b={"@context":"https://schema.org","@type":"BlogPosting",headline:t.frontmatter.title,datePublished:t.frontmatter.date,url:f,author:[{"@type":"Person",name:"Jedr Blaszyk",url:"https://j.blaszyk.me/"}]};return l.createElement(m.A,{location:this.props.location,title:n,tocComponent:l.createElement(x.A,t.tableOfContents)},l.createElement(g.A,{title:t.frontmatter.title,description:t.frontmatter.spoiler,slug:t.fields.slug,image:h,structuredData:b}),l.createElement("main",null,l.createElement("article",{className:"post"},l.createElement("header",{id:"post-header"},l.createElement("h1",{style:{color:"var(--textTitle)",marginTop:"1.5rem",marginBottom:"0.5rem"}},t.frontmatter.title),l.createElement(c.Link,{style:{boxShadow:"none",textDecoration:"none",color:"var(--textLink)",fontFamily:"Montserrat, sans-serif"},to:"/tech-blog/",rel:"bookmark"},l.createElement("p",null,"Tech Blog")),l.createElement("p",{style:{...(0,E.hs)(-.2),display:"block",marginBottom:(0,E.di)(1),marginTop:(0,E.di)(-.8)}},(0,v.Wy)(t.frontmatter.date),l.createElement("span",{style:{margin:"0 0.15rem"}}," • "),(0,v.Bt)(t.fields.timeToRead.minutes))),l.createElement(o.x,{components:I},e))),l.createElement("aside",null,l.createElement("nav",null,l.createElement("ul",{style:{display:"flex",flexWrap:"wrap",justifyContent:"space-between",listStyle:"none",padding:0,marginLeft:0}},l.createElement("li",null,s&&l.createElement(c.Link,{to:"/"+y+s.fields.slug,rel:"prev"},"← ",s.frontmatter.title)),l.createElement("li",null,r&&l.createElement(c.Link,{to:"/"+y+r.fields.slug,rel:"next"},r.frontmatter.title," →")))),l.createElement("h3",{style:{fontFamily:"Montserrat, sans-serif",marginTop:(0,E.di)(.25)}},l.createElement(c.Link,{style:{boxShadow:"none",textDecoration:"none",color:"var(--textLink)",fontSize:(0,E.di)(.8)},to:"/"},"Jedr's Blog")," • ",l.createElement(c.Link,{style:{boxShadow:"none",textDecoration:"none",color:"var(--textLink)",fontSize:(0,E.di)(.8)},to:"/tech-blog/"},"Tech Blog")),l.createElement(p.A),l.createElement(w.A,{url:f,id:t.fields.slug,title:t.frontmatter.title})))},t}(l.Component);function H(e){return l.createElement(_,e,l.createElement(r,e))}}}]);
//# sourceMappingURL=component---src-templates-tech-blog-post-js-content-file-path-content-tech-blog-tech-stack-of-fast-free-and-customizable-blog-index-mdx-9c44cdd2a528a243648e.js.map