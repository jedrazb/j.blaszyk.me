{"version":3,"file":"component---src-templates-tech-blog-index-js-8f649db79fd15726f605.js","mappings":"uOAS4D,IAEtDA,EAAqB,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,KA+GxB,OA/GwBC,EAAAA,EAAAA,GAAAJ,EAAAC,GAAAD,EAAAK,UACzBC,OAAA,WACE,MAAMC,EAAYC,IAAIC,KAAM,sCACtBC,EAAQF,IAAIC,KAAM,2BASxB,OACEE,EAAAA,cAACC,EAAAA,EAAM,CAACC,SAAUJ,KAAKK,MAAMD,SAAUE,MAAOR,GAC5CI,EAAAA,cAACK,EAAAA,EAAG,CACFD,MAAO,YACPF,SAAUJ,KAAKK,MAAMD,SACrBI,YAAa,6BACbC,eAbiB,CACrB,WAAY,qBACZ,QAAS,OACTC,IAAK,kCACLC,KAAM,eAWJT,EAAAA,cAAA,SACEU,MAAO,CACLC,QAAS,OACTC,WAAY,WAGdZ,EAAAA,cAAA,MAAIU,MAAO,CAAEG,UAAW,IAAK,aAC7Bb,EAAAA,cAACc,EAAAA,KAAI,CACHC,KAAK,qBACLC,IAAI,sBACJC,UAAU,cACVP,MAAO,CAAEQ,WAAY,MAAOC,aAAc,QAE1CnB,EAAAA,cAACoB,EAAAA,EAAG,QAGRpB,EAAAA,cAAA,YACGD,EAAMsB,KAAIC,IAAe,IAAd,KAAEC,GAAMD,EAClB,MAAMlB,EAAQP,IAAI0B,EAAM,sBAAwBA,EAAKC,OAAOC,KACtDC,EAAa7B,IAAI0B,EAAM,0BAC7B,OACEvB,EAAAA,cAACc,EAAAA,KAAI,CACHJ,MAAO,CACLiB,UAAW,OACXC,eAAgB,OAChBC,MAAO,qBAETC,GAAE,IAAMP,EAAKC,OAAOO,SAAWR,EAAKC,OAAOC,KAC3CT,IAAI,YAEJhB,EAAAA,cAAA,WACEgC,IAAKT,EAAKC,OAAOC,KACjBf,MAAO,CACLuB,gBAAiB,sBACjBC,aAAc,OACdC,OAAQ,gCACRhB,aAAc,WAGhBnB,EAAAA,cAAA,cACEA,EAAAA,cAAA,MACEU,MAAO,CACLmB,MAAO,kBACPO,WAAY,yBACZC,UAAUC,EAAAA,EAAAA,IAAO,IACjBnB,cAAcmB,EAAAA,EAAAA,IAAO,EAAI,GACzBzB,WAAWyB,EAAAA,EAAAA,IAAO,EAAI,GACtBC,YAAYD,EAAAA,EAAAA,IAAO,EAAI,GACvBE,aAAaF,EAAAA,EAAAA,IAAO,EAAI,GACxBG,cAAcH,EAAAA,EAAAA,IAAO,EAAI,GACzBI,eAAeJ,EAAAA,EAAAA,IAAO,EAAI,KAG3BlC,GAGFsB,GACC1B,EAAAA,cAAC2C,EAAAA,EAAW,CAACC,OAAOC,EAAAA,EAAAA,GAASnB,GAAaoB,IAAK1C,IAGjDJ,EAAAA,cAAA,OACEU,MAAO,CACLqC,SAAST,EAAAA,EAAAA,IAAO,EAAI,GACpBI,cAAe,EACfH,YAAYD,EAAAA,EAAAA,IAAO,MAGrBtC,EAAAA,cAAA,cACGgD,EAAAA,EAAAA,IAAezB,EAAK0B,YAAYC,MACjClD,EAAAA,cAAA,QAAMU,MAAO,CAAEyC,OAAQ,cAAc,QACpCC,EAAAA,EAAAA,IAAkB7B,EAAKC,OAAO6B,WAAWC,YAIhDtD,EAAAA,cAAA,KACEU,MAAO,CACLqC,SAAST,EAAAA,EAAAA,IAAO,EAAI,GACpBnB,aAAc,EACdoB,YAAYD,EAAAA,EAAAA,IAAO,EAAI,IAEzBiB,wBAAyB,CACvBC,OAAQjC,EAAK0B,YAAYQ,YAI1B,KAMnB,EAACpE,CAAA,CA/GwB,CAASW,EAAAA,WAkHpC,W","sources":["webpack://j.blaszyk.me/./src/templates/tech-blog-index.js"],"sourcesContent":["import { Link, graphql } from 'gatsby';\nimport { formatPostDate, formatReadingTime } from '../utils/helpers';\nimport { Rss } from 'react-feather';\n\nimport Layout from '../components/Layout';\nimport React from 'react';\nimport SEO from '../components/SEO';\nimport get from 'lodash/get';\nimport { rhythm } from '../utils/typography';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\n\nclass TechBlogIndexTemplate extends React.Component {\n  render() {\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title');\n    const posts = get(this, 'props.data.allMdx.edges');\n\n    const structuredData = {\n      '@context': 'https://schema.org',\n      '@type': 'Blog',\n      url: 'https://j.blaszyk.me/tech-blog/',\n      name: 'Tech Blog',\n    };\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={'Tech Blog'}\n          location={this.props.location}\n          description={'Tech blog by Jedr Blaszyk.'}\n          structuredData={structuredData}\n        />\n        <aside\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n          }}\n        >\n          <h1 style={{ marginTop: 0 }}>Tech Blog</h1>\n          <Link\n            href=\"/tech-blog/rss.xml\"\n            rel=\"noopener noreferrer\"\n            className=\"footer-icon\"\n            style={{ marginLeft: '1em', marginBottom: '1em' }}\n          >\n            <Rss />\n          </Link>\n        </aside>\n        <main>\n          {posts.map(({ node }) => {\n            const title = get(node, 'frontmatter.title') || node.fields.slug;\n            const indexImage = get(node, 'frontmatter.indexImage');\n            return (\n              <Link\n                style={{\n                  boxShadow: 'none',\n                  textDecoration: 'none',\n                  color: 'var(--textNormal)',\n                }}\n                to={`/${node.fields.category}${node.fields.slug}`}\n                rel=\"bookmark\"\n              >\n                <article\n                  key={node.fields.slug}\n                  style={{\n                    backgroundColor: 'var(--bg-secondary)',\n                    borderRadius: '20px',\n                    border: 'solid 1px var(--post-outline)',\n                    marginBottom: '1.5rem',\n                  }}\n                >\n                  <header>\n                    <h3\n                      style={{\n                        color: 'var(--textLink)',\n                        fontFamily: 'Montserrat, sans-serif',\n                        fontSize: rhythm(4 / 5),\n                        marginBottom: rhythm(1 / 3),\n                        marginTop: rhythm(1 / 3),\n                        paddingTop: rhythm(1 / 3),\n                        paddingLeft: rhythm(1 / 3),\n                        paddingRight: rhythm(1 / 3),\n                        paddingBottom: rhythm(1 / 6),\n                      }}\n                    >\n                      {title}\n                    </h3>\n\n                    {indexImage && (\n                      <GatsbyImage image={getImage(indexImage)} alt={title} />\n                    )}\n\n                    <div\n                      style={{\n                        padding: rhythm(1 / 3),\n                        paddingBottom: 0,\n                        paddingTop: rhythm(1 / 5),\n                      }}\n                    >\n                      <small>\n                        {formatPostDate(node.frontmatter.date)}\n                        <span style={{ margin: '0 0.15rem' }}>{` â€¢ `}</span>\n                        {formatReadingTime(node.fields.timeToRead.minutes)}\n                      </small>\n                    </div>\n                  </header>\n                  <p\n                    style={{\n                      padding: rhythm(1 / 3),\n                      marginBottom: 0,\n                      paddingTop: rhythm(1 / 6),\n                    }}\n                    dangerouslySetInnerHTML={{\n                      __html: node.frontmatter.spoiler,\n                    }}\n                  />\n                </article>\n              </Link>\n            );\n          })}\n        </main>\n      </Layout>\n    );\n  }\n}\n\nexport default TechBlogIndexTemplate;\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMdx(\n      sort: { frontmatter: { date: DESC } }\n      filter: { fields: { category: { eq: \"tech-blog\" } } }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            category\n            timeToRead {\n              minutes\n            }\n          }\n\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            spoiler\n            indexImage {\n              childImageSharp {\n                gatsbyImageData(width: 800, layout: CONSTRAINED)\n              }\n            }\n            images {\n              id\n            }\n            blogImages {\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["TechBlogIndexTemplate","_React$Component","apply","arguments","_inheritsLoose","prototype","render","siteTitle","get","this","posts","React","Layout","location","props","title","SEO","description","structuredData","url","name","style","display","alignItems","marginTop","Link","href","rel","className","marginLeft","marginBottom","Rss","map","_ref","node","fields","slug","indexImage","boxShadow","textDecoration","color","to","category","key","backgroundColor","borderRadius","border","fontFamily","fontSize","rhythm","paddingTop","paddingLeft","paddingRight","paddingBottom","GatsbyImage","image","getImage","alt","padding","formatPostDate","frontmatter","date","margin","formatReadingTime","timeToRead","minutes","dangerouslySetInnerHTML","__html","spoiler"],"sourceRoot":""}