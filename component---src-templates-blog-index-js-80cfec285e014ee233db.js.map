{"version":3,"file":"component---src-templates-blog-index-js-80cfec285e014ee233db.js","mappings":"wPAgB0B,IAEpBA,EAAiB,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,KAgGpB,OAhGoBC,EAAAA,EAAAA,GAAAJ,EAAAC,GAAAD,EAAAK,UACrBC,OAAA,WACE,MAAMC,EAAYC,IAAIC,KAAM,sCACtBC,EAAQF,IAAIC,KAAM,2BAUxB,OACEE,EAAAA,cAACC,EAAAA,EAAM,CAACC,SAAUJ,KAAKK,MAAMD,SAAUE,MAAOR,GAC5CI,EAAAA,cAACK,EAAAA,EAAG,CAACC,eAVc,CACrB,WAAY,qBACZ,QAAS,UACTC,IAAK,wBACLC,KAAM,eACNC,cAAe,kBAMbT,EAAAA,cAAA,aACEA,EAAAA,cAACU,EAAAA,EAAG,OAENV,EAAAA,cAAA,YACGD,EAAMY,KAAI,CAAAC,EAAWC,KAAS,IAAnB,KAAEC,GAAMF,EAClB,MAAMR,EAAQP,IAAIiB,EAAM,sBAAwBA,EAAKC,OAAOC,KACtDC,EAAapB,IAAIiB,EAAM,0BAC7B,OACEd,EAAAA,cAACkB,EAAAA,KAAI,CACHC,MAAO,CACLC,UAAW,OACXC,eAAgB,OAChBC,MAAO,qBAETC,GAAIT,EAAKC,OAAOC,KAChBQ,IAAI,YAEJxB,EAAAA,cAAA,WACEyB,IAAKX,EAAKC,OAAOC,KACjBG,MAAO,CACLO,aAAc,gCACdC,aAAc,SACdC,cAAe,UAEjBC,UAAWC,IAAW,wBAAyB,CAC7C,+BAAgCjB,EAAM,GAAK,KAG7Cb,EAAAA,cAAA,OAAK6B,UAAU,yBACZZ,GACCjB,EAAAA,cAAC+B,EAAAA,EAAW,CAACC,OAAOC,EAAAA,EAAAA,GAAShB,GAAaiB,IAAK9B,KAGnDJ,EAAAA,cAAA,OAAK6B,UAAU,yBACb7B,EAAAA,cAAA,OAAK6B,UAAU,qCACb7B,EAAAA,cAAA,cACEA,EAAAA,cAAA,MACE6B,UAAW,uBACXV,MAAO,CACLgB,WAAY,yBACZC,UAAUC,EAAAA,EAAAA,IAAO,MAGlBjC,GAGHJ,EAAAA,cAAA,OACEmB,MAAO,CACLmB,YAAYD,EAAAA,EAAAA,IAAO,IACnBT,cAAe,IAGjB5B,EAAAA,cAAA,cACGuC,EAAAA,EAAAA,IAAezB,EAAK0B,YAAYC,MACjCzC,EAAAA,cAAA,QAAMmB,MAAO,CAAEuB,OAAQ,cAAc,QACpCC,EAAAA,EAAAA,IAAkB7B,EAAKC,OAAO6B,WAAWC,SAC1C7C,EAAAA,cAAA,QAAMmB,MAAO,CAAEuB,OAAQ,cAAc,QACpCI,EAAAA,EAAAA,IAAqBhC,EAAK0B,gBAIjCxC,EAAAA,cAAA,KACEmB,MAAO,CACLQ,aAAc,EACdW,YAAYD,EAAAA,EAAAA,IAAO,EAAI,GACvBT,eAAeS,EAAAA,EAAAA,IAAO,EAAI,IAE5BU,wBAAyB,CACvBC,OAAQlC,EAAK0B,YAAYS,cAM9B,KAMnB,EAAC5D,CAAA,CAhGoB,CAASW,EAAAA,WAmGhC,W","sources":["webpack://j.blaszyk.me/./src/templates/blog-index.js"],"sourcesContent":["import { Link, graphql } from 'gatsby';\nimport {\n  formatPostDate,\n  formatReadingTime,\n  formatNumberOfPhotos,\n} from '../utils/helpers';\nimport classnames from 'classnames';\n\nimport Bio from '../components/Bio';\nimport Layout from '../components/Layout';\nimport React from 'react';\nimport SEO from '../components/SEO';\nimport get from 'lodash/get';\nimport { rhythm } from '../utils/typography';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\n\nimport './blog-index.css';\n\nclass BlogIndexTemplate extends React.Component {\n  render() {\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title');\n    const posts = get(this, 'props.data.allMdx.edges');\n\n    const structuredData = {\n      '@context': 'https://schema.org',\n      '@type': 'WebSite',\n      url: 'https://j.blaszyk.me/',\n      name: 'Jedr Blaszyk',\n      alternateName: 'Jedr Blaszyk',\n    };\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO structuredData={structuredData} />\n        <aside>\n          <Bio />\n        </aside>\n        <main>\n          {posts.map(({ node }, idx) => {\n            const title = get(node, 'frontmatter.title') || node.fields.slug;\n            const indexImage = get(node, 'frontmatter.indexImage');\n            return (\n              <Link\n                style={{\n                  boxShadow: 'none',\n                  textDecoration: 'none',\n                  color: 'var(--textNormal)',\n                }}\n                to={node.fields.slug}\n                rel=\"bookmark\"\n              >\n                <article\n                  key={node.fields.slug}\n                  style={{\n                    borderBottom: 'solid 1px var(--post-outline)',\n                    marginBottom: '1.5rem',\n                    paddingBottom: '1.5rem',\n                  }}\n                  className={classnames('blog-post-tile-layout', {\n                    'blog-post-tile-reverse-order': idx % 2 == 1,\n                  })}\n                >\n                  <div className=\"blog-post-tile-column\">\n                    {indexImage && (\n                      <GatsbyImage image={getImage(indexImage)} alt={title} />\n                    )}\n                  </div>\n                  <div className=\"blog-post-tile-column\">\n                    <div className=\"blog-post-tile-column-description\">\n                      <header>\n                        <h3\n                          className={'blog-post-tile-title'}\n                          style={{\n                            fontFamily: 'Montserrat, sans-serif',\n                            fontSize: rhythm(4 / 5),\n                          }}\n                        >\n                          {title}\n                        </h3>\n\n                        <div\n                          style={{\n                            paddingTop: rhythm(1 / 5),\n                            paddingBottom: 0,\n                          }}\n                        >\n                          <small>\n                            {formatPostDate(node.frontmatter.date)}\n                            <span style={{ margin: '0 0.15rem' }}>{` • `}</span>\n                            {formatReadingTime(node.fields.timeToRead.minutes)}\n                            <span style={{ margin: '0 0.15rem' }}>{` • `}</span>\n                            {formatNumberOfPhotos(node.frontmatter)}\n                          </small>\n                        </div>\n                      </header>\n                      <p\n                        style={{\n                          marginBottom: 0,\n                          paddingTop: rhythm(1 / 6),\n                          paddingBottom: rhythm(1 / 3),\n                        }}\n                        dangerouslySetInnerHTML={{\n                          __html: node.frontmatter.spoiler,\n                        }}\n                      />\n                    </div>\n                  </div>\n                </article>\n              </Link>\n            );\n          })}\n        </main>\n      </Layout>\n    );\n  }\n}\n\nexport default BlogIndexTemplate;\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMdx(\n      sort: { frontmatter: { date: DESC } }\n      filter: { fields: { category: { eq: \"blog\" } } }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            timeToRead {\n              minutes\n            }\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            spoiler\n            indexImage {\n              childImageSharp {\n                gatsbyImageData(width: 800, layout: CONSTRAINED)\n              }\n            }\n            images {\n              id\n            }\n            blogImages {\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["BlogIndexTemplate","_React$Component","apply","arguments","_inheritsLoose","prototype","render","siteTitle","get","this","posts","React","Layout","location","props","title","SEO","structuredData","url","name","alternateName","Bio","map","_ref","idx","node","fields","slug","indexImage","Link","style","boxShadow","textDecoration","color","to","rel","key","borderBottom","marginBottom","paddingBottom","className","classnames","GatsbyImage","image","getImage","alt","fontFamily","fontSize","rhythm","paddingTop","formatPostDate","frontmatter","date","margin","formatReadingTime","timeToRead","minutes","formatNumberOfPhotos","dangerouslySetInnerHTML","__html","spoiler"],"sourceRoot":""}